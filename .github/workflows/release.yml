name: Release e new version

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'CODEOWNERS'
      - '**.md'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  release:
    name: Release e new version
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3
        
      - name: Semantic release (dry-run)
        uses: cycjimmy/semantic-release-action@v3
        id: semantic
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          semantic_version: 19
          branch: main
          extra_plugins: |
            @semantic-release/release-notes-generator@10.0.3
            @semantic-release/git@10.0.1
          dry_run: true

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Update the version in pom.xml
        run: mvn versions:set -DnewVersion=${{ steps.semantic.outputs.new_release_version }}
        
      - name: Add + commit + tag + push pom.xml for the new version
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"
          current_url=${{ github.repositoryUrl }}
          token=${{ secrets.ACTIONS_TOKEN }}
          new_url=${current_url/\/\////$token@}
          git remote set-url origin ${new_url}
          git add pom.xml
          git commit -m "pom.xml updated with new version ${{ steps.semantic.outputs.new_release_version }}"
          git push origin main

      - name: Semantic release
        uses: cycjimmy/semantic-release-action@v3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          semantic_version: 19
          branch: main
          extra_plugins: |
            @semantic-release/release-notes-generator@10.0.3
            @semantic-release/git@10.0.1
          dry_run: false

      - name: Build dependencies with Maven
        run: mvn clean validate -Pbootstrap

      - name: Build ${{ env.IMAGE_NAME }} with Maven
        run: mvn clean package -Pnative
 
      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          file: src/main/docker/Dockerfile.native-micro
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      
      # DEPLOY ON AZURE
      # RUN IT
      # RUN PERF-TEST